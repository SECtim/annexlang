#!/usr/bin/python3

import sys
import yaml
import sys
import argparse
import os
import hashlib

from annexlang import TikzPicture, HTMLPicture

formats = {
    'tikz': TikzPicture,
    'html': HTMLPicture
}

CUSTOM_OBJECTS_FILE = 'annex_custom.py'

parser = argparse.ArgumentParser(description='Convert an file from the Annex language to a TikZ picture that can be used in TeX documents.')
parser.add_argument('infile', type=str, help='Input file, YAML format with Annex extensions.')
parser.add_argument('format', type=str, help=f'Output format', choices=formats.keys())
parser.add_argument('outfile', type=str, help='Output file, TeX code or HTML.')
args = parser.parse_args()

custom_objects_filename = os.path.join(
    os.path.dirname(args.infile),
    CUSTOM_OBJECTS_FILE
)

if os.path.exists(custom_objects_filename):
    import importlib.util
    spec = importlib.util.spec_from_file_location('annex_custom', custom_objects_filename)
    module = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(module)
    
with open(args.infile, 'r') as inf:
    src = inf.read()

unique_id = hashlib.md5(src.encode('utf-8')).hexdigest()[:10]  # yes, md5 is fine here. really.

parsed = yaml.load(src, Loader=yaml.Loader)

output_class = formats[args.format]

with open(args.outfile, 'w') as outf:
    t = output_class(parsed, unique_id=unique_id)
    t.dump(outf)

    
